name: Asset Solution Deployment Dev

env:
  BABYLON_SERVICE: ${{ secrets.BABYLON_SERVICE }}
  BABYLON_TOKEN: ${{ secrets.BABYLON_TOKEN }}
  BABYLON_ORG_NAME: cosmotech

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master 

jobs:
  asset-deploy:
    runs-on: ubuntu-latest
    env:
      dir: personal
      config_path: ./config
      CONTEXT_ID: "asset"
      PLATFORM_ID: "dev"
    steps:
      - uses: actions/checkout@v3

      - name: install babylon
        uses: Cosmo-Tech/babylon-actions/.github/actions/babylon@asset
        with:
          BABYLON_SERVICE: ${{ env.BABYLON_SERVICE }}
          BABYLON_TOKEN: ${{ env.BABYLON_TOKEN }}
          BABYLON_ORG_NAME: ${{ env.BABYLON_ORG_NAME }}
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name: Setup basic configuration
        uses: Cosmo-Tech/babylon-actions/.github/actions/set-variables@asset
        with: 
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}
          email: mohcine.tor@cosmotech.com
          user_principal_id: 67bf46cc-38ec-4f23-aba7-fedfcde26856
          workspace_key: BabyAsset
          team_id: 25d59980-4644-4ba0-af6f-2ce9fae86c96
          simulator_image_docker: simulator_simulator
          simulator_version: ASSET_5555fc9d_2023-08-03-10h29-09Z
          uri_artifact_zip: https://github.com/Cosmo-Tech/supplychain-azure-function-dataset-download/releases/download/2.1.10/artifact.zip
          deployment_name: devasset
          location: eastus2
          repo_to: azure-webapp-asset-qa
          repo_to_branch: dev/asset
          organization: Cosmo-Tech
      
      - name: create a new organization
        uses: Cosmo-Tech/babylon-actions/.github/actions/organization@asset
        with:
          name: "Asset_Org_Cosmo_Tech"
          email: mohcine.tor@cosmotech.com
          role: admin
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name: create container storage by default
        uses: Cosmo-Tech/babylon-actions/.github/actions/storage@asset
        with:
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name: deploy adx database and permissions
        uses: Cosmo-Tech/babylon-actions/.github/actions/adx@asset
        with:
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name: deploy eventhub namespaces and permissions
        uses: Cosmo-Tech/babylon-actions/.github/actions/eventhub@asset
        with:
          name: "Asset_Eventhub_Deploy"
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name: azure login
        uses: Azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
            
      - name: Authentication Eventhub configuration
        uses: Cosmo-Tech/babylon-actions/.github/actions/eventkey@asset
        with:
          resource_group: phoenixdev
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name : Generate Workspace Name
        id : date
        run : |
            CDATE=$(date "+%Y-%m-%d_%H:%M:%S")_$(head /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 4)
            echo "CDATE=$CDATE" >> $GITHUB_OUTPUT

      - name : deploy workspace powerbi 
        uses : Cosmo-Tech/babylon-actions/.github/actions/powerbi@asset
        with:
          BABYLON_ENCODING_KEY: ${{ secrets.BABYLON_ENCODING_KEY }} 
          workspace_name: asset_dashboard_${{ steps.date.outputs.CDATE }}
          type_dashboard_view: dashboard_view
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name: retrieve sample webapp
        continue-on-error: true
        uses: Cosmo-Tech/babylon-actions/.github/actions/retrieve@asset
        with:
          repo_from: Cosmo-Tech/phoenix-asset-product-webapp
          repo_tag: upstream/deployment/dev1
          repo_to: Cosmo-Tech/azure-webapp-asset-qa
          repo_to_branch: dev/asset
          username: mohcine
          email: mohcine.tor@cosmotech.com
          pat: ${{ secrets.PAT }}
      
      - name: increment deployment name field
        id: idnf
        run: |
            cd ${{ env.dir }}
            deployment_name=$(babylon config get -c ${{ env.CONTEXT_ID }} -p ${{ env.PLATFORM_ID }} webapp deployment_name)
            echo $deployment_name
            random_string=$(head /dev/urandom | tr -dc 'a-zA-Z0-9' | head -c 4)
            new_deployment_name=${deployment_name}_${random_string}
            echo $new_deployment_name
            babylon config set -c ${{ env.CONTEXT_ID }} -p ${{ env.PLATFORM_ID }} webapp deployment_name $new_deployment_name

      - name: deploy webapp
        continue-on-error: true
        uses: Cosmo-Tech/babylon-actions/.github/actions/webapp@asset
        with:
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}
            
      # add this action
      # - name: Retrieve azure function key
      #   uses: Cosmo-Tech/babylon-actions/.github/actions/azurefunctionkey@asset
      #   with:
      #     resource_group: phoenixdev
      #     context_id: ${{ env.CONTEXT_ID }}
      #     platform_id: ${{ env.PLATFORM_ID }}

      # - name: create twin connector
      #   uses: Cosmo-Tech/babylon-actions/.github/actions/connector@asset
      #   with:
      #     type: twin
      #     version: 0.1.1
      #     name: "Asset Baby connector TWIN"
      #     context_id: ${{ env.CONTEXT_ID }}
      #     platform_id: ${{ env.PLATFORM_ID }}

      # - name: create dataset twin
      #   uses: Cosmo-Tech/babylon-actions/.github/actions/dataset@asset
      #   with:
      #     type: twin
      #     name: "Asset Baby dataset Twin"
      #     context_id: ${{ env.CONTEXT_ID }}
      #     platform_id: ${{ env.PLATFORM_ID }}


      - name: create connector storage
        uses: Cosmo-Tech/babylon-actions/.github/actions/connector@asset
        with:
          type: storage
          version: 1.1.2
          name: "Asset_Baby_onnector_STORAGE"
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}
      
      - name: create dataset storage
        uses: Cosmo-Tech/babylon-actions/.github/actions/dataset@asset
        with:
          type: storage
          name: "Asset_Baby_dataset_STORAGE"
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name : Add content to runTemplates field
        run: |
            cp $config_path/asset.dev.solution.yaml ${{ env.dir }}/.payload/
            
      - name: create solution Asset
        uses: Cosmo-Tech/babylon-actions/.github/actions/solution@asset
        with:
          name: "Asset_Solution_Deploy"
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name: create workspace Asset
        uses: Cosmo-Tech/babylon-actions/.github/actions/workspace@asset
        with:
          name: Asset_Baby_Workspace
          email: mohcine.tor@cosmotech.com
          role: admin
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}

      - name: upload CSV file asset
        uses: Cosmo-Tech/babylon-actions/.github/actions/upload_dataset@asset
        with:
          context_id: ${{ env.CONTEXT_ID }}
          platform_id: ${{ env.PLATFORM_ID }}